name: full+commands enhanced

on:
  pull_request:
    paths:
      - '**/*.tf'
      - '.github/workflows/*.yml'

jobs:
  terraform-lint:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Find changed .tf files
      - name: Find changed .tf files
        id: changed-files
        run: |
          git fetch origin main
          CHANGED_FILES=$(git diff --name-only origin/main | grep '\.tf$' || true)
          if [ -z "$CHANGED_FILES" ]; then
            echo "No Terraform files changed."
            exit 0
          else
            echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
          fi

      # Step 3: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # Step 4: Terraform Fmt Check
      - name: Terraform Fmt
        if: env.CHANGED_FILES != ''
        run: |
          TERRAFORM_FMT_STATUS=""
          for file in ${CHANGED_FILES}; do
            if terraform fmt -check -recursive $(dirname "$file"); then
              TERRAFORM_FMT_STATUS+="✅ $file is formatted correctly\n"
            else
              TERRAFORM_FMT_STATUS+="❌ $file needs formatting\n"
            fi
          done
          echo "TERRAFORM_FMT_STATUS=${TERRAFORM_FMT_STATUS}" >> $GITHUB_ENV

      # Step 5: TFLint Check
      - name: Terraform TFLint
        if: env.CHANGED_FILES != ''
        run: |
          TFLINT_STATUS=""
          for file in ${CHANGED_FILES}; do
            if tflint $(dirname "$file"); then
              TFLINT_STATUS+="✅ $file linted successfully\n"
            else
              TFLINT_STATUS+="❌ $file has linting issues\n"
            fi
          done
          echo "TFLINT_STATUS=${TFLINT_STATUS}" >> $GITHUB_ENV

      # Step 6: Checkov Scan
      - name: Checkov scan
        if: env.CHANGED_FILES != ''
        run: |
          CHECKOV_STATUS=""
          for file in ${CHANGED_FILES}; do
            if checkov -f "$file" --compact --quiet; then
              CHECKOV_STATUS+="✅ $file passed security checks\n"
            else
              CHECKOV_STATUS+="❌ $file has security issues\n"
            fi
          done
          echo "CHECKOV_STATUS=${CHECKOV_STATUS}" >> $GITHUB_ENV

      # Step 7: Final Status
      - name: Final Status Check
        run: |
          if [[ "$TERRAFORM_FMT_STATUS" == *"❌"* || "$TFLINT_STATUS" == *"❌"* || "$CHECKOV_STATUS" == *"❌"* ]]; then
            FINAL_STATUS="❌ Checks failed"
          else
            FINAL_STATUS="✅ All checks passed"
          fi
          echo "FINAL_STATUS=${FINAL_STATUS}" >> $GITHUB_ENV

      # Step 8: Post Check Results as a PR comment
      - name: Post Check Results as PR comment
        uses: mshick/add-pr-comment@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ### Terraform Check Results
            - Terraform FMT: ${{ env.TERRAFORM_FMT_STATUS }}
            - TFLint: ${{ env.TFLINT_STATUS }}
            - Checkov: ${{ env.CHECKOV_STATUS }}

            **Final Status:** ${{ env.FINAL_STATUS }}
        if: always()
